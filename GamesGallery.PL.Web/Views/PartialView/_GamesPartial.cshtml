@using GamesGallery.ViewModel.Helper
@using PagedList
@using PagedList.Mvc
@model IPagedList<GamesGallery.ViewModel.GameViewModel>

@if (Model.Count() > 0)
{
    <div class="container">
        @* Title *@
        <div class="row">
            <div class="col-md-12 mt-5 mb-4">
                <div>
                    <div class="bg-danger">
                        <div class="float-left">
                            @if (@ViewBag.GamesCount == null || @ViewBag.GamesCount == 0)
                            {
                                <h2 class="text-capitalize">@ViewBag.Title</h2>
                            }
                            else
                            {
                                <h2 class="text-capitalize">@ViewBag.Title (@ViewBag.GamesCount)</h2>
                            }
                        </div>
                        <div class="float-right" style="line-height:48px;">
                            <a href="#FiltersPanel" data-toggle="collapse" title="Show Filter Panel" style="color:var(--body-text)">
                                <span class="glyphicon glyphicon-filter"></span>
                            </a>
                        </div>
                    </div>
                </div>
                <div class="panel panel-default mt-5">
                    <div class="panel-body collapse" id="FiltersPanel">
                        @using (Html.BeginForm((string)ViewBag.Action, (string)ViewBag.Controller, new { para = (string)ViewBag.Parameter }, FormMethod.Get))
                        {
                            <div class="col-xl-3 col-lg-4 col-md-5 col-sm-6 p-0">
                                @Html.TextBox("NoOfGames", "", htmlAttributes: new { @class = "form-control mb-2", placeholder = "No of Games / Page", type = "number", min = "1", max = "100" })
                                <input type="submit" class="btn mb-2 apply-button" value="Apply" />
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

        @* Games *@
        <div class="row">
            @foreach (var game in Model)
            {
                <div class="col-md-12 mb-0 mb-md-4 p-4 p-md-0">
                    <div class="row p-0 p-md-0 rounded" style="border:1px solid var(--game-tile-background);">
                        @* Game Image *@
                        <div class="col-xl-3 col-lg-3 col-md-4 col-sm-12 p-0 pl-md-0 pr-md-3">
                            <div class="pt-md-0 pb-md-0">
                                <img src="@Url.Content(game.CoverImage)" class="img-fluid w-100 h-auto" />
                            </div>
                        </div>
                        @* Game Content *@
                        <div class="col-xl-9 col-lg-9 col-md-8 col-sm-12 pb-3 pl-md-3 pr-md-3" style="color:var(--game-tile-text)">
                            <div class="pt-3 pt-md-2 pb-md-1">
                                <h3>@game.Title</h3>
                                <div class="mt-3" style="background-color: var(--game-tile-time-background);color:var(--game-tile-time-text);padding-top:1px;padding-right:15px;padding-bottom:0.02px;padding-left:15px;border-radius:25px;">
                                    @{ string categoriesTitle = "";}
                                    @foreach (var category in game.Categories)
                                    {
                                        categoriesTitle += category.Title + ", ";
                                    }
                                    @{ categoriesTitle = categoriesTitle.Remove(categoriesTitle.LastIndexOf(','), 1); }
                                    <h6>@DateToTimeAgo.GetTimeAgo(game.DateOfUpload.Value) > @categoriesTitle</h6>
                                </div>
                                <p class="text-justify mt-3 description-limit">@game.Description</p>
                                <a href="/Games/Details/@game.Id" class="btn download-button">Download</a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <div class="PagedListPager">
            @Html.PagedListPager(Model, Page => Url.Action(ViewBag.Action, ViewBag.Controller, new { Page, NoOfGames = Request["NoOfGames"] }), new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayPageCountAndCurrentLocation = true })
        </div>
    </div>
}
